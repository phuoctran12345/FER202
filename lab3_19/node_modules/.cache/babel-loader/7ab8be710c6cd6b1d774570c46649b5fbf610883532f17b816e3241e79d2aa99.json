{"ast":null,"code":"var _jsxFileName = \"/Users/tranhongphuoc/FER202/lab3_19/src/components/Question.jsx\";\nimport React from 'react';\nimport { Card, Button, ListGroup, ProgressBar, Badge, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  question,\n  // dạng chuỗi\n  onAnswerSelected,\n  // Hàm callback được gọi khi người dùng chọn một lựa chọn.\n  selectedAnswer,\n  // Lựa chọn hiện tại mà người dùng đã chọn (dùng để đánh dấu lựa chọn đang được chọn).\n  onClickNext,\n  // Hàm callback được gọi khi người dùng nhấn nút \"Câu tiếp theo\" hoặc \"Hoàn thành Quiz\".\n  activeQuestion,\n  // Số thứ tự của câu hỏi hiện tại (bắt đầu từ 0).\n  totalQuestions\n}) => {\n  const progress = (activeQuestion + 1) / totalQuestions * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Badge, {\n            bg: \"info\",\n            className: \"fs-6\",\n            children: [\"C\\xE2u h\\u1ECFi \", activeQuestion + 1, \" / \", totalQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            bg: \"secondary\",\n            className: \"fs-6\",\n            children: [Math.round(progress), \"% ho\\xE0n th\\xE0nh\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: progress,\n          variant: \"success\",\n          animated: true,\n          className: \"mb-3\",\n          style: {\n            height: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4 border-0 bg-light\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center text-primary mb-0\",\n          children: [question.question, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"mb-4\",\n      children: question.choices.map((choice, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        action: true,\n        active: selectedAnswer === choice,\n        onClick: () => onAnswerSelected(choice),\n        className: `d-flex align-items-center py-3 ${selectedAnswer === choice ? 'border-primary' : ''}`,\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(Badge, {\n          bg: selectedAnswer === choice ? 'primary' : 'secondary',\n          className: \"me-3\",\n          children: String.fromCharCode(65 + index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"fs-5\",\n          children: choice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        size: \"lg\",\n        onClick: onClickNext,\n        disabled: !selectedAnswer,\n        className: \"px-5\",\n        children: activeQuestion === totalQuestions - 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"\\uD83C\\uDFC1 Ho\\xE0n th\\xE0nh Quiz\"\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"\\u27A1\\uFE0F C\\xE2u ti\\u1EBFp theo\"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","Card","Button","ListGroup","ProgressBar","Badge","Row","Col","jsxDEV","_jsxDEV","Fragment","_Fragment","Question","question","onAnswerSelected","selectedAnswer","onClickNext","activeQuestion","totalQuestions","progress","children","className","bg","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","now","variant","animated","style","height","Body","choices","map","choice","index","Item","action","active","onClick","cursor","String","fromCharCode","size","disabled","_c","$RefreshReg$"],"sources":["/Users/tranhongphuoc/FER202/lab3_19/src/components/Question.jsx"],"sourcesContent":["import React from 'react';\nimport { Card, Button, ListGroup, ProgressBar, Badge, Row, Col } from 'react-bootstrap';\n\nconst Question = ({\n                      question, // dạng chuỗi\n                      onAnswerSelected, // Hàm callback được gọi khi người dùng chọn một lựa chọn.\n                      selectedAnswer, // Lựa chọn hiện tại mà người dùng đã chọn (dùng để đánh dấu lựa chọn đang được chọn).\n                      onClickNext, // Hàm callback được gọi khi người dùng nhấn nút \"Câu tiếp theo\" hoặc \"Hoàn thành Quiz\".\n                      activeQuestion, // Số thứ tự của câu hỏi hiện tại (bắt đầu từ 0).\n                      totalQuestions\n                  }) => {\n    const progress = ((activeQuestion + 1) / totalQuestions) * 100;\n\n    return (\n        <div>\n            {/* Header với progress bar */}\n            <Row className=\"mb-4\">\n                <Col>\n                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                        <Badge bg=\"info\" className=\"fs-6\">\n                            Câu hỏi {activeQuestion + 1} / {totalQuestions}\n                        </Badge>\n                        <Badge bg=\"secondary\" className=\"fs-6\">{ /* Math.round -> làm tròn số */}\n                            {Math.round(progress)}% hoàn thành\n                        </Badge>\n                    </div>\n                    <ProgressBar\n                        now={progress}\n                        variant=\"success\"\n                        animated\n                        className=\"mb-3\"\n                        style={{ height: '8px' }}\n                    />\n                </Col>\n            </Row>\n\n            {/* Câu hỏi */}\n            <Card className=\"mb-4 border-0 bg-light\">\n                <Card.Body>\n                    <h3 className=\"text-center text-primary mb-0\">\n                        {question.question} {/*question.question: Nội dung câu hỏi (chuỗi).*/}\n                    </h3>\n                </Card.Body>\n            </Card>\n\n            {/* Các lựa chọn */}\n            <ListGroup className=\"mb-4\">\n                {question.choices.map((choice, index) => (\n                    <ListGroup.Item\n                        key={index}\n                        action\n                        active={selectedAnswer === choice}\n                        onClick={() => onAnswerSelected(choice)}\n                        className={`d-flex align-items-center py-3 ${\n                            selectedAnswer === choice ? 'border-primary' : '' \n                        }`}\n                        style={{ cursor: 'pointer' }}\n                    > {/*question.choices: Mảng các lựa chọn trả lời.*/}\n                        <Badge\n                            bg={selectedAnswer === choice ? 'primary' : 'secondary'}\n                            className=\"me-3\"\n                        >\n                            {String.fromCharCode(65 + index)}\n                            { /*index = 0 + 65 -> A ; index = 1 + 65 -> A ; index = 2 + 65 -> C*/}\n                        </Badge>\n                        <span className=\"fs-5\">{choice}</span>\n                    </ListGroup.Item>\n                ))}\n            </ListGroup>\n\n            {/* Nút Next */}\n            <div className=\"text-center\">\n                <Button\n                    variant=\"success\"\n                    size=\"lg\"\n                    onClick={onClickNext}\n                    disabled={!selectedAnswer}\n                    className=\"px-5\"\n                >\n                    {activeQuestion === totalQuestions - 1 ? (\n                        <>🏁 Hoàn thành Quiz</>\n                    ) : (\n                        <>➡️ Câu tiếp theo</>\n                    )}\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default Question;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,KAAK,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExF,MAAMC,QAAQ,GAAGA,CAAC;EACIC,QAAQ;EAAE;EACVC,gBAAgB;EAAE;EAClBC,cAAc;EAAE;EAChBC,WAAW;EAAE;EACbC,cAAc;EAAE;EAChBC;AACJ,CAAC,KAAK;EACpB,MAAMC,QAAQ,GAAI,CAACF,cAAc,GAAG,CAAC,IAAIC,cAAc,GAAI,GAAG;EAE9D,oBACIT,OAAA;IAAAW,QAAA,gBAEIX,OAAA,CAACH,GAAG;MAACe,SAAS,EAAC,MAAM;MAAAD,QAAA,eACjBX,OAAA,CAACF,GAAG;QAAAa,QAAA,gBACAX,OAAA;UAAKY,SAAS,EAAC,wDAAwD;UAAAD,QAAA,gBACnEX,OAAA,CAACJ,KAAK;YAACiB,EAAE,EAAC,MAAM;YAACD,SAAS,EAAC,MAAM;YAAAD,QAAA,GAAC,kBACtB,EAACH,cAAc,GAAG,CAAC,EAAC,KAAG,EAACC,cAAc;UAAA;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC,eACRjB,OAAA,CAACJ,KAAK;YAACiB,EAAE,EAAC,WAAW;YAACD,SAAS,EAAC,MAAM;YAAAD,QAAA,GACjCO,IAAI,CAACC,KAAK,CAACT,QAAQ,CAAC,EAAC,oBAC1B;UAAA;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACNjB,OAAA,CAACL,WAAW;UACRyB,GAAG,EAAEV,QAAS;UACdW,OAAO,EAAC,SAAS;UACjBC,QAAQ;UACRV,SAAS,EAAC,MAAM;UAChBW,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAM;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGNjB,OAAA,CAACR,IAAI;MAACoB,SAAS,EAAC,wBAAwB;MAAAD,QAAA,eACpCX,OAAA,CAACR,IAAI,CAACiC,IAAI;QAAAd,QAAA,eACNX,OAAA;UAAIY,SAAS,EAAC,+BAA+B;UAAAD,QAAA,GACxCP,QAAQ,CAACA,QAAQ,EAAC,GAAC;QAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGPjB,OAAA,CAACN,SAAS;MAACkB,SAAS,EAAC,MAAM;MAAAD,QAAA,EACtBP,QAAQ,CAACsB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAChC7B,OAAA,CAACN,SAAS,CAACoC,IAAI;QAEXC,MAAM;QACNC,MAAM,EAAE1B,cAAc,KAAKsB,MAAO;QAClCK,OAAO,EAAEA,CAAA,KAAM5B,gBAAgB,CAACuB,MAAM,CAAE;QACxChB,SAAS,EAAE,kCACPN,cAAc,KAAKsB,MAAM,GAAG,gBAAgB,GAAG,EAAE,EAClD;QACHL,KAAK,EAAE;UAAEW,MAAM,EAAE;QAAU,CAAE;QAAAvB,QAAA,GAChC,GAAC,eACEX,OAAA,CAACJ,KAAK;UACFiB,EAAE,EAAEP,cAAc,KAAKsB,MAAM,GAAG,SAAS,GAAG,WAAY;UACxDhB,SAAS,EAAC,MAAM;UAAAD,QAAA,EAEfwB,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGP,KAAK;QAAC;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE7B,CAAC,eACRjB,OAAA;UAAMY,SAAS,EAAC,MAAM;UAAAD,QAAA,EAAEiB;QAAM;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAhBjCY,KAAK;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBE,CACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eAGZjB,OAAA;MAAKY,SAAS,EAAC,aAAa;MAAAD,QAAA,eACxBX,OAAA,CAACP,MAAM;QACH4B,OAAO,EAAC,SAAS;QACjBgB,IAAI,EAAC,IAAI;QACTJ,OAAO,EAAE1B,WAAY;QACrB+B,QAAQ,EAAE,CAAChC,cAAe;QAC1BM,SAAS,EAAC,MAAM;QAAAD,QAAA,EAEfH,cAAc,KAAKC,cAAc,GAAG,CAAC,gBAClCT,OAAA,CAAAE,SAAA;UAAAS,QAAA,EAAE;QAAkB,gBAAE,CAAC,gBAEvBX,OAAA,CAAAE,SAAA;UAAAS,QAAA,EAAE;QAAgB,gBAAE;MACvB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACsB,EAAA,GArFIpC,QAAQ;AAuFd,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}