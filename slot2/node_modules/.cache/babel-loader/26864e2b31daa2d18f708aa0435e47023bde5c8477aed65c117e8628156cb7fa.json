{"ast":null,"code":"var _jsxFileName = \"/Users/tranhongphuoc/exercise-1/src/Ex7/AreAllTeenagers.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst people = [{\n  name: \"ahung\",\n  age: 12,\n  occupation: \"saler\"\n}, {\n  name: \"btoan\",\n  age: 24,\n  occupation: \"manager\"\n}, {\n  name: \"ckhang\",\n  age: 30,\n  occupation: \"staff\"\n}, {\n  name: \"dphat\",\n  age: 18,\n  occupation: \"docter\"\n}];\nfunction sortByOccupationAndAge(people) {\n  return people.sort((a, b) => {\n    //sort by occupation alphabetically\n    const occupationComparison = a.occupation.localeCompare(b.locales, {});\n  });\n}\nfunction AreAllTeenager() {\n  const sortedPeople = sortByOccupationAndAge(people);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"----------------------------------------------Exercise 7---------------------\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Check if all are teenager? Result \", people.find(people => people.age <= 10 || people.age >= 20) === \"undefined\" ? \"True\" : \"False\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"----------------------------------------------Exercise 8---------------------\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sort by occupation and age: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(sortedPeople, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_c = AreAllTeenager;\nexport default AreAllTeenager;\nvar _c;\n$RefreshReg$(_c, \"AreAllTeenager\");","map":{"version":3,"names":["people","name","age","occupation","sortByOccupationAndAge","sort","a","b","occupationComparison","localeCompare","locales","AreAllTeenager","sortedPeople","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","find","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/tranhongphuoc/exercise-1/src/Ex7/AreAllTeenagers.js"],"sourcesContent":["const people = [\n    {name: \"ahung\" , age: 12 ,occupation: \"saler\"},\n    {name: \"btoan\" , age: 24 ,occupation: \"manager\" },\n    {name: \"ckhang\" , age: 30 ,occupation: \"staff\" },\n    {name: \"dphat\" , age: 18 ,occupation: \"docter\"},\n]\n\nfunction sortByOccupationAndAge(people) {\n    return people.sort((a,b) => {\n        //sort by occupation alphabetically\n        const occupationComparison  = a.occupation.localeCompare(b. locales, {})\n    })\n}\n\n\nfunction AreAllTeenager() {\n    const sortedPeople = sortByOccupationAndAge(people);\n    return (\n        <div>\n            <h4>----------------------------------------------Exercise 7---------------------</h4>\n            <h3>\n                Check if all are teenager? Result {people.find(people => (people.age <= 10) || (people.age >= 20))\n                 === \"undefined\" ?  \"True\": \"False\"}\n            </h3>\n            <h4>----------------------------------------------Exercise 8---------------------</h4>\n            <h3>Sort by occupation and age: </h3>\n            <pre>{JSON.stringify(sortedPeople, null, 2)}</pre> \n            {/*\n            sortedPeople: The array of objects (e.g., the sorted people array) to convert to a string.\n            null: This is the \"replacer\" parameter, which can be used to filter or transform values. Here, itâ€™s null, meaning no transformation is applied (all values are included as-is).\n            2: This is the \"space\" parameter, which controls indentation for readability. A value of 2 means the JSON string will be formatted with 2 spaces for each level of indentation, making it easier to read.\n            */}\n            \n        </div>\n    )\n}\n\nexport default AreAllTeenager;"],"mappings":";;AAAA,MAAMA,MAAM,GAAG,CACX;EAACC,IAAI,EAAE,OAAO;EAAGC,GAAG,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAO,CAAC,EAC9C;EAACF,IAAI,EAAE,OAAO;EAAGC,GAAG,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAU,CAAC,EACjD;EAACF,IAAI,EAAE,QAAQ;EAAGC,GAAG,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAQ,CAAC,EAChD;EAACF,IAAI,EAAE,OAAO;EAAGC,GAAG,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAQ,CAAC,CAClD;AAED,SAASC,sBAAsBA,CAACJ,MAAM,EAAE;EACpC,OAAOA,MAAM,CAACK,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;IACxB;IACA,MAAMC,oBAAoB,GAAIF,CAAC,CAACH,UAAU,CAACM,aAAa,CAACF,CAAC,CAAEG,OAAO,EAAE,CAAC,CAAC,CAAC;EAC5E,CAAC,CAAC;AACN;AAGA,SAASC,cAAcA,CAAA,EAAG;EACtB,MAAMC,YAAY,GAAGR,sBAAsB,CAACJ,MAAM,CAAC;EACnD,oBACIa,OAAA;IAAAC,QAAA,gBACID,OAAA;MAAAC,QAAA,EAAI;IAA6E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtFL,OAAA;MAAAC,QAAA,GAAI,oCACkC,EAACd,MAAM,CAACmB,IAAI,CAACnB,MAAM,IAAKA,MAAM,CAACE,GAAG,IAAI,EAAE,IAAMF,MAAM,CAACE,GAAG,IAAI,EAAG,CAAC,KAC7F,WAAW,GAAI,MAAM,GAAE,OAAO;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACLL,OAAA;MAAAC,QAAA,EAAI;IAA6E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtFL,OAAA;MAAAC,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCL,OAAA;MAAAC,QAAA,EAAMM,IAAI,CAACC,SAAS,CAACT,YAAY,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOjD,CAAC;AAEd;AAACI,EAAA,GApBQX,cAAc;AAsBvB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}